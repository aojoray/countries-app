{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/country/country.componenet.html","./src/app/history/history.componenet.html","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/country/country.componenet.css","./src/app/country/country.component.ts","./src/app/history/history.componenet.css","./src/app/history/history.component.ts","./src/app/services/service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<div class=\\\"container\\\">\\r\\n\\r\\n  <div class=\\\"form-continer\\\">\\r\\n    <form #countryform=\\\"ngForm\\\" (ngSubmit)=\\\"countryform.resetForm()\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <h1>Countries lookup</h1>\\r\\n        <div class=\\\"input-group-prepend\\\">\\r\\n          <mat-form-field class=\\\"form-field\\\">\\r\\n            <input #country class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Country name\\\" matInput\\r\\n              [formControl]=\\\"countryctrl\\\" [matAutocomplete]=\\\"auto\\\" name=\\\"country\\\" autocomplete=\\\"on\\\" ngModel required>\\r\\n            <button mat-button type=\\\"submit\\\" class=\\\"input-group-text\\\" (click)=\\\"searchCountry(country)\\\">Search</button>\\r\\n            <mat-autocomplete #auto=\\\"matAutocomplete\\\"  (optionSelected)=\\\"searchCountry(country)\\\">\\r\\n              <mat-option *ngFor=\\\"let country of filteredOptions | async\\\" [value]=\\\"country.name\\\">\\r\\n                {{country.name}} ({{country.alpha3Code}})\\r\\n              </mat-option>\\r\\n            </mat-autocomplete>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n\\r\\n    <div>\\r\\n      <app-history></app-history>\\r\\n    </div>\\r\\n    \\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"data\\\" >\\r\\n    <app-country-info></app-country-info>\\r\\n  </div>\\r\\n\\r\\n</div>\";","export default \"<div *ngIf=\\\"country\\\">\\n  <p>{{country.name}}</p>\\n  <img class=\\\"flag\\\" src={{country.flag}}/>\\n  <table mat-table [dataSource]=\\\"transformed\\\">\\n    <ng-container matColumnDef=\\\"key\\\">\\n      <td class=\\\"key\\\" mat-cell *matCellDef=\\\"let country\\\"> {{country.key}} </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"content\\\">\\n      <td class=\\\"content\\\" mat-cell *matCellDef=\\\"let country\\\"> {{country.content}} </td>\\n    </ng-container>\\n    <tr mat-row *matRowDef=\\\"let row; columns: columnsToDisplay ;\\\"></tr>\\n  </table>\\n</div>\";","export default \"<div class=\\\"history\\\" *ngIf=\\\"histories\\\">\\n  <h4>Search History</h4>\\n  <ul class=\\\"list\\\">\\n    <button mat-button *ngFor=\\\"let country of histories; let i=index\\\" (click)=\\\"loadInfo(country)\\\"><span>{{country.name}} ({{country.alpha3Code}})</span></button>\\n  </ul>\\n</div>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \".form-continer {\\r\\n    max-width: 20em;\\r\\n    width: 260px;\\r\\n    background: #f4f4f4;\\r\\n    padding: 1em;\\r\\n    position: fixed;\\r\\n    height: 100%;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    z-index: 1;\\r\\n}\\r\\n\\r\\nform h1 {\\r\\n    color: #eeb007;\\r\\n}\\r\\n\\r\\nform input[type=text]::-moz-placeholder {\\r\\n    color: #666;\\r\\n}\\r\\n\\r\\nform input[type=text]::-ms-input-placeholder {\\r\\n    color: #666;\\r\\n}\\r\\n\\r\\nform input[type=text]::placeholder {\\r\\n    color: #666;\\r\\n}\\r\\n\\r\\nform .form-field {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\nform .input-group-text {\\r\\n    background: #eeb007;\\r\\n    float: right;\\r\\n}\\r\\n\\r\\nform .input-group-text i {\\r\\n    font-size: 2em;\\r\\n}\\r\\n\\r\\nform .form-control {\\r\\n    height: 3em;\\r\\n    max-width: 60%;\\r\\n}\\r\\n\\r\\nform .form-control:focus {\\r\\n    box-shadow: 0;\\r\\n}\\r\\n\\r\\n.data {\\r\\n    margin-left: 300px;\\r\\n    font-size: 28px;\\r\\n    padding: 0px 10px;\\r\\n}\\r\\n\\r\\n@media screen and (max-width: 700px) {\\r\\n    .form-continer {\\r\\n        width: inherit;\\r\\n        height: auto;\\r\\n        position: relative;\\r\\n        margin: auto;\\r\\n        padding: 1em;\\r\\n        max-width: 98%;\\r\\n        padding-left: 5%;\\r\\n        margin: 0;\\r\\n        overflow: auto;\\r\\n    }\\r\\n\\r\\n    form .form-field {\\r\\n        width: 92%;\\r\\n    }\\r\\n\\r\\n    .data {\\r\\n        font-size: 28px;\\r\\n        margin: auto;\\r\\n    }\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0lBQ2YsWUFBWTtJQUNaLG1CQUFtQjtJQUNuQixZQUFZO0lBQ1osZUFBZTtJQUNmLFlBQVk7SUFDWixNQUFNO0lBQ04sT0FBTztJQUNQLFVBQVU7QUFDZDs7QUFFQTtJQUNJLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRkE7SUFDSSxXQUFXO0FBQ2Y7O0FBRkE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxtQkFBbUI7SUFDbkIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsY0FBYztBQUNsQjs7QUFFQTtJQUNJLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJO1FBQ0ksY0FBYztRQUNkLFlBQVk7UUFDWixrQkFBa0I7UUFDbEIsWUFBWTtRQUNaLFlBQVk7UUFDWixjQUFjO1FBQ2QsZ0JBQWdCO1FBQ2hCLFNBQVM7UUFDVCxjQUFjO0lBQ2xCOztJQUVBO1FBQ0ksVUFBVTtJQUNkOztJQUVBO1FBQ0ksZUFBZTtRQUNmLFlBQVk7SUFDaEI7QUFDSiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tY29udGluZXIge1xyXG4gICAgbWF4LXdpZHRoOiAyMGVtO1xyXG4gICAgd2lkdGg6IDI2MHB4O1xyXG4gICAgYmFja2dyb3VuZDogI2Y0ZjRmNDtcclxuICAgIHBhZGRpbmc6IDFlbTtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICB6LWluZGV4OiAxO1xyXG59XHJcblxyXG5mb3JtIGgxIHtcclxuICAgIGNvbG9yOiAjZWViMDA3O1xyXG59XHJcblxyXG5mb3JtIGlucHV0W3R5cGU9dGV4dF06OnBsYWNlaG9sZGVyIHtcclxuICAgIGNvbG9yOiAjNjY2O1xyXG59XHJcblxyXG5mb3JtIC5mb3JtLWZpZWxkIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5mb3JtIC5pbnB1dC1ncm91cC10ZXh0IHtcclxuICAgIGJhY2tncm91bmQ6ICNlZWIwMDc7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbn1cclxuXHJcbmZvcm0gLmlucHV0LWdyb3VwLXRleHQgaSB7XHJcbiAgICBmb250LXNpemU6IDJlbTtcclxufVxyXG5cclxuZm9ybSAuZm9ybS1jb250cm9sIHtcclxuICAgIGhlaWdodDogM2VtO1xyXG4gICAgbWF4LXdpZHRoOiA2MCU7XHJcbn1cclxuXHJcbmZvcm0gLmZvcm0tY29udHJvbDpmb2N1cyB7XHJcbiAgICBib3gtc2hhZG93OiAwO1xyXG59XHJcblxyXG4uZGF0YSB7XHJcbiAgICBtYXJnaW4tbGVmdDogMzAwcHg7XHJcbiAgICBmb250LXNpemU6IDI4cHg7XHJcbiAgICBwYWRkaW5nOiAwcHggMTBweDtcclxufVxyXG5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzAwcHgpIHtcclxuICAgIC5mb3JtLWNvbnRpbmVyIHtcclxuICAgICAgICB3aWR0aDogaW5oZXJpdDtcclxuICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIG1hcmdpbjogYXV0bztcclxuICAgICAgICBwYWRkaW5nOiAxZW07XHJcbiAgICAgICAgbWF4LXdpZHRoOiA5OCU7XHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiA1JTtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgICB9XHJcblxyXG4gICAgZm9ybSAuZm9ybS1maWVsZCB7XHJcbiAgICAgICAgd2lkdGg6IDkyJTtcclxuICAgIH1cclxuXHJcbiAgICAuZGF0YSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAyOHB4O1xyXG4gICAgICAgIG1hcmdpbjogYXV0bztcclxuICAgIH1cclxufSJdfQ== */\";","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Service, Country } from './services/service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  title = 'countries-app';\r\n  countries = [];\r\n  country = {};\r\n  filteredOptions: Observable<string[]>;\r\n\r\n  countryctrl = new FormControl();\r\n  subscription: Subscription;\r\n  constructor(private service: Service) {}\r\n\r\n  ngOnInit(): void {\r\n    // Getting country list from service (API acces point)\r\n    this.service.getCountries().subscribe(async res => {\r\n      this.countries = res;\r\n      this.filteredOptions = this.countryctrl.valueChanges // filtered option for autocomplete\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => this._filter(value))\r\n        );\r\n    });\r\n  }\r\n\r\n  // unsubscribe to avoid memory leackage\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * on form submit, search selected country then send it to service for other components\r\n   * @param input: DOM element getting user input for searching a country\r\n   */\r\n  searchCountry(input: HTMLInputElement): void {\r\n    let selected = input.value;\r\n    if (selected != null && selected !== '') {\r\n      let selectedCountry = this.countries.filter(country => this._isMatching(country, this._getRegex(selected)))[0];\r\n      if (selectedCountry) {\r\n        this.service.setCountry(selectedCountry);\r\n        this.service.addHistory(selectedCountry);\r\n        this.countryctrl.reset();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Helper function reutrning a match list for search\r\n   * @param value: string of country name or ISO code user supplied  \r\n   */\r\n  private _filter(value: string): string[] {\r\n    let filterValue = value ? value.toLowerCase() : '';\r\n    if (filterValue.length >= 3) {\r\n      return this.countries.filter(country => this._isMatching(country, this._getRegex(filterValue))).slice(0, 9);\r\n    }\r\n  }\r\n  /**\r\n   * Helper funciton for _filter returns test result for multiple attirbutes of an object\r\n   * @param country: country object\r\n   * @param reg: regex expression for testing\r\n   * @returns boolean value for test result for both country name and alpha3code\r\n   */\r\n  private _isMatching(country: Country, reg: RegExp): boolean {\r\n    return reg.test(country.name.replace(/[^a-zA-Z0-9_\\s]/g, '')) || reg.test(country.alpha3Code);\r\n  }\r\n\r\n  /**\r\n   * Helper funciton for _filter returning regex expression\r\n   * @param input user input\r\n   * @returns RegExp created based on user input\r\n   */\r\n  private _getRegex(input: string): RegExp {\r\n    input = input.replace(/[^a-zA-Z0-9_\\s]/g, '');\r\n    let exp = '(' + input;\r\n    if (input.match(/\\s/ig)) {\r\n      let split = input.split(' ');\r\n      exp += '|' + split[0] + '\\\\w\\\\s\\\\(?' + split[1];\r\n    }\r\n    exp += ')';\r\n    return new RegExp(exp, 'ig');\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { Service } from './services/service';\r\nimport { CountryInfoComponent } from './country/country.component';\r\nimport { HistoryComponent } from './history/history.component';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatTableModule } from '@angular/material/table';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CountryInfoComponent,\r\n    HistoryComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatSliderModule,\r\n    MatTableModule,\r\n    HttpClientModule,\r\n    MatAutocompleteModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatRippleModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule\r\n  ],\r\n  providers: [Service],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \"body {\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n.flag {\\r\\n    min-width: 20%;\\r\\n    display: inline-block;\\r\\n    max-width: 250px;\\r\\n    padding: 10px;\\r\\n    background: #f4f4f4;\\r\\n}\\r\\n\\r\\n.key {\\r\\n    width: 15em;\\r\\n    max-width: 250px;\\r\\n    font-weight: bold;\\r\\n    font-size: 18px;\\r\\n}\\r\\n\\r\\n.content {\\r\\n    width: 40em;\\r\\n    max-width: 300px;\\r\\n    font-size: 16px;\\r\\n}\\r\\n\\r\\n@media screen and (max-width: 700px) {\\r\\n    .flag {\\r\\n        display: inline-block;\\r\\n        max-width: 92%;\\r\\n        padding: 3%;\\r\\n    }\\r\\n\\r\\n    .key {\\r\\n        width: 15em;\\r\\n        max-width: 250px;\\r\\n        font-weight: bold;\\r\\n        font-size: 14px;\\r\\n    }\\r\\n\\r\\n    .content {\\r\\n        text-align: right;\\r\\n        font-size: 14px;\\r\\n    }\\r\\n\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY291bnRyeS9jb3VudHJ5LmNvbXBvbmVuZXQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtJQUNWLFNBQVM7QUFDYjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxxQkFBcUI7SUFDckIsZ0JBQWdCO0lBQ2hCLGFBQWE7SUFDYixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksV0FBVztJQUNYLGdCQUFnQjtJQUNoQixlQUFlO0FBQ25COztBQUVBO0lBQ0k7UUFDSSxxQkFBcUI7UUFDckIsY0FBYztRQUNkLFdBQVc7SUFDZjs7SUFFQTtRQUNJLFdBQVc7UUFDWCxnQkFBZ0I7UUFDaEIsaUJBQWlCO1FBQ2pCLGVBQWU7SUFDbkI7O0lBRUE7UUFDSSxpQkFBaUI7UUFDakIsZUFBZTtJQUNuQjs7QUFFSiIsImZpbGUiOiJzcmMvYXBwL2NvdW50cnkvY291bnRyeS5jb21wb25lbmV0LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJvZHkge1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxufVxyXG5cclxuLmZsYWcge1xyXG4gICAgbWluLXdpZHRoOiAyMCU7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBtYXgtd2lkdGg6IDI1MHB4O1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIGJhY2tncm91bmQ6ICNmNGY0ZjQ7XHJcbn1cclxuXHJcbi5rZXkge1xyXG4gICAgd2lkdGg6IDE1ZW07XHJcbiAgICBtYXgtd2lkdGg6IDI1MHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBmb250LXNpemU6IDE4cHg7XHJcbn1cclxuXHJcbi5jb250ZW50IHtcclxuICAgIHdpZHRoOiA0MGVtO1xyXG4gICAgbWF4LXdpZHRoOiAzMDBweDtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxufVxyXG5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzAwcHgpIHtcclxuICAgIC5mbGFnIHtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgbWF4LXdpZHRoOiA5MiU7XHJcbiAgICAgICAgcGFkZGluZzogMyU7XHJcbiAgICB9XHJcblxyXG4gICAgLmtleSB7XHJcbiAgICAgICAgd2lkdGg6IDE1ZW07XHJcbiAgICAgICAgbWF4LXdpZHRoOiAyNTBweDtcclxuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICB9XHJcblxyXG4gICAgLmNvbnRlbnQge1xyXG4gICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIH1cclxuXHJcbn0iXX0= */\";","import { Component, OnDestroy } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Service, Country } from '../services/service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-country-info',\n  templateUrl: './country.componenet.html',\n  styleUrls: ['./country.componenet.css']\n})\n\n/** CountryInfoComponent is responsible for displaying information of selected countries */\nexport class CountryInfoComponent implements OnDestroy{\n  country; // selected country\n  subscription: Subscription;\n  labels = { 'Name': 'name', 'Currency Name': 'currencies', 'Latitude/longitude': 'latlng', 'Land Area': 'area'}; // Labels of table\n  columnsToDisplay = ['key', 'content'];\n  transformed; // transformed data for table\n  constructor(private service: Service) {\n    // subscribe to app component messages (selected country)\n    this.subscription = this.service.getCountry().subscribe(data => {\n      if (data !== undefined) {\n        this.country = data;\n        this.transformed = this.transformData(data);\n      }\n    });\n  }\n\n  // unsubscribe to avoid memory leackage\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  /**\n   * Format country data to display on mat-table. This function creates a list of rows.\n   * @param data: country object\n   */\n  transformData(data: Country): MatTableDataSource<Row> {\n    let temp=[];\n    Object.keys(this.labels).forEach(k => {\n      let row: Row = {\n        key: k,\n        content: this._format(k, data[this.labels[k]])\n      };\n      temp.push(row);\n    });\n    return new MatTableDataSource(temp);\n  }\n\n  /**\n   * Helper function for formating data depending on spec\n   * @param k: key of row\n   * @param value: value of row\n   */\n  private _format(k: Row[\"key\"], value: Row[\"content\"]): string | number {\n    let cont;\n    switch (k) {\n      case 'Currency Name':\n        cont = value[0].name + ' (' + value[0].symbol + ')';\n        break;\n      case 'Latitude/longitude':\n        cont = value && typeof value === 'object' && value.length > 0 ? value.join(' / ') : 'unknown';\n        break;\n      case 'Land Area':\n        cont = value ? value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + '\t\\u33A2' : 'unknown';\n        break;\n      default:\n        cont = value;\n        break;\n    }\n    return cont;\n  }\n}\n\ntype Row = {\n  key: string;\n  content: string | number | number[];\n}\n\n","export default \".history {\\r\\n    margin-top: 1em;\\r\\n}\\r\\n\\r\\n.history .list {\\r\\n    list-style-type: none;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.history button {\\r\\n    background: #fff;\\r\\n    border-left: 4px solid #eeb007;\\r\\n    padding: 10px;\\r\\n    margin: 5px auto;\\r\\n    color: #666;\\r\\n    white-space: normal;\\r\\n    text-align: left;\\r\\n    width: 250px;\\r\\n    line-height: 1.5em;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGlzdG9yeS9oaXN0b3J5LmNvbXBvbmVuZXQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLHFCQUFxQjtJQUNyQixVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsOEJBQThCO0lBQzlCLGFBQWE7SUFDYixnQkFBZ0I7SUFDaEIsV0FBVztJQUNYLG1CQUFtQjtJQUNuQixnQkFBZ0I7SUFDaEIsWUFBWTtJQUNaLGtCQUFrQjtBQUN0QiIsImZpbGUiOiJzcmMvYXBwL2hpc3RvcnkvaGlzdG9yeS5jb21wb25lbmV0LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oaXN0b3J5IHtcclxuICAgIG1hcmdpbi10b3A6IDFlbTtcclxufVxyXG5cclxuLmhpc3RvcnkgLmxpc3Qge1xyXG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xyXG4gICAgcGFkZGluZzogMDtcclxufVxyXG5cclxuLmhpc3RvcnkgYnV0dG9uIHtcclxuICAgIGJhY2tncm91bmQ6ICNmZmY7XHJcbiAgICBib3JkZXItbGVmdDogNHB4IHNvbGlkICNlZWIwMDc7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgbWFyZ2luOiA1cHggYXV0bztcclxuICAgIGNvbG9yOiAjNjY2O1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICB3aWR0aDogMjUwcHg7XHJcbiAgICBsaW5lLWhlaWdodDogMS41ZW07XHJcbn0iXX0= */\";","import { Component, OnDestroy } from '@angular/core';\nimport { Service, Country } from '../services/service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.componenet.html',\n  styleUrls: ['./history.componenet.css']\n})\n\n/** HistoryComponent is responsible for displaying histories section */\nexport class HistoryComponent implements OnDestroy {\n  histories;\n  country;\n  subscription: Subscription;\n\n  constructor(private service: Service) {\n    // subscribe to app component messages (search histories)\n    this.subscription = this.service.getHistory().subscribe(data => {\n      if (data !== undefined && data.length > 0) {\n        this.histories = data;\n      }\n    });\n  }\n\n  /**\n   * Handling click event of history element. Sets new selected country to display on CountryInfo component\n   * @param country: selected country\n   */\n  loadInfo(country: Country): void {\n    this.service.setCountry(country);\n  }\n\n  // unsubscribe to avoid memory leackage\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, Subject, BehaviorSubject  } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class Service {\r\n    API = 'https://restcountries.eu/rest/v2/all';\r\n    constructor(private http: HttpClient) {}\r\n    private country = new Subject<any>();\r\n    // ref: https://coryrylan.com/blog/angular-observable-data-services\r\n    private _histories = new BehaviorSubject<Country[]>([]);\r\n    private dataStore: { histories: Country[] } = { histories: [] };\r\n    readonly histories = this._histories.asObservable();\r\n    historymap = {};\r\n\r\n    /**  getCountries returns a list of all countries */\r\n    getCountries(): Observable<Country[]>{\r\n        return this.http.get(this.API).pipe(map((res: Country[])  => res));\r\n    }\r\n\r\n    /**  getCountry returns an observable Country object that is being selected */\r\n    getCountry(): Observable<Country> {\r\n        return this.country.asObservable();\r\n    }\r\n\r\n    /**  setCountry takes a Country parameter being selected */\r\n    setCountry(country: Country): void {\r\n        this.country.next(this.format(country));\r\n    }\r\n\r\n    /**  getHistory returns a list of observable Countries being searched by user */\r\n    getHistory(): Observable<Country[]> {\r\n        return this.histories;\r\n    }\r\n\r\n    /**  addHistory takes a Country object and store it in an observable list of countries being searched (histories) */\r\n    addHistory(country: Country): void {\r\n        if (!this.historymap[country.alpha3Code]) {\r\n            this.historymap[country.alpha3Code] = 1;\r\n            if (this.dataStore.histories.length === 10) {\r\n                this.dataStore.histories.pop();\r\n            }\r\n            let temp = [country];\r\n            this.dataStore.histories = temp.concat(this.dataStore.histories);\r\n            this._histories.next(Object.assign({}, this.dataStore).histories);\r\n        }\r\n    }\r\n\r\n    /** helper function to format country object */\r\n    format(country: Country): ParsedCountry {\r\n        let parsed = {\r\n            name: country.name,\r\n            flag: country.flag,\r\n            currencies: country.currencies,\r\n            latlng: country.latlng,\r\n            area: country.area,\r\n            alpha2Code: country.alpha2Code\r\n        };\r\n        return parsed;\r\n    }\r\n}\r\n\r\nexport type Country = {\r\n    name: string;\r\n    flag: string;\r\n    currencies: [];\r\n    latlng: [];\r\n    area: number;\r\n    alpha2Code: string;\r\n    alpha3Code: string;\r\n}\r\n\r\nexport type ParsedCountry = {\r\n    name: string;\r\n    flag: string;\r\n    currencies: [];\r\n    latlng: [];\r\n    area: number;\r\n    alpha2Code: string;\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}